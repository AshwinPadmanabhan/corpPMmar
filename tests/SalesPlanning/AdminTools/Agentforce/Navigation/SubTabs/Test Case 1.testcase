<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase guid="7a40043b-5205-4405-9475-9d8a45ded80c" id="29">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" guid="3477d54f-fcc3-40d6-a83b-f5020bea6264" name="ApexConnect" testItemId="1" title="Salesforce Connect: ProvarStudio (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">ProvarStudio</value>
        </argument>
        <argument id="connectionId">
          <value class="value" valueClass="id">d897f30a-32db-4faf-a639-8bb22589e18d</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">ProvarStudio</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName"/>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" guid="4d32413c-0d37-413b-8975-636f16fbb328" name="SetValues" testItemId="2" title="Set Values: STRING1">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">STRING1</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">Large Merchant Services asdff</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" guid="4b626e65-efdb-40de-b72a-d8322ab9b48c" name="If" testItemId="3" title="If: {STRING1 (&quot;.*Large Merchant Services.*&quot;)}">
      <arguments>
        <argument id="condition">
          <value class="value" escapingDisabled="true" valueClass="string">{STRING1 (".*Large Merchant Services.*")}</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="4">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" guid="93d20254-2dad-416a-adf3-b6945f8e92fc" name="SetValues" testItemId="5" title="Set Values: A">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">A</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">B</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
